# Môi trường Production

# SERVER
server.port=${PORT:80}

# JWT
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}

# MAIL
spring.mail.host=${SPRING_MAIL_HOST}
spring.mail.port=${SPRING_MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE}
spring.mail.from=${MAIL_FROM}

# OAUTH2 - GOOGLE
spring.security.oauth2.client.registration.google.client-id=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT-ID}
spring.security.oauth2.client.registration.google.client-secret=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT-SECRET}

# OAUTH2 - FACEBOOK
spring.security.oauth2.client.registration.facebook.client-id=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_FACEBOOK_CLIENT-ID}
spring.security.oauth2.client.registration.facebook.client-secret=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_FACEBOOK_CLIENT-SECRET}

# URL ỨNG DỤNG
app.base-url=${APP_BASE_URL}
app.upload.dir=${APP_UPLOAD_DIR}

# URL DỊCH VỤ BÊN NGOÀI
facebook.avatar.url.template=${FACEBOOK_AVATAR_URL_TEMPLATE}
sockjs.client.library.url=${SOCKJS_CLIENT_LIBRARY_URL}
swagger.server.prod.url=${SWAGGER_SERVER_PROD_URL}

#
# MOMO (LIVE)
momo.base-url=https://payment.momo.vn
momo.partner-code=${MOMO_PARTNER_CODE}
momo.access-key=${MOMO_ACCESS_KEY}
momo.secret-key=${MOMO_SECRET_KEY}

# GHN (SHIPPING)
ghn.base-url=https://online-gateway.ghn.vn/shiip/public-api
ghn.token=${GHN_TOKEN}
ghn.shop-id=${GHN_SHOP_ID}

# GEMINI (AI)
gemini.api-key=${GEMINI_API_KEY}
gemini.base-url=https://generativelanguage.googleapis.com/v1beta
gemini.model=gemini-2.5-flash

# AWS RDS Database Connection Settings
spring.datasource.url=jdbc:postgresql://flower-shop-db-instance.c5gc6e8m62lz.ap-southeast-2.rds.amazonaws.com:5432/flower_shop_system
spring.datasource.username=flower_admin
spring.datasource.password=flower_password_2024
spring.datasource.driver-class-name=org.postgresql.Driver

# DATABASE - PostgreSQL (Production) - Fallback to environment variables
# spring.datasource.url=${SPRING_DATASOURCE_URL}
# spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
# spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# JPA/Hibernate Settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# DATABASE CONNECTION POOL - HikariCP (Production)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.auto-commit=false

# JPA/HIBERNATE - Production Optimizations
spring.jpa.properties.hibernate.connection.autocommit=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# TRANSACTION MANAGEMENT
spring.jpa.properties.hibernate.transaction.coordinator_class=jdbc
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

