// Language Switcher for StarShop
// Handles language switching functionality with localStorage persistence

class LanguageSwitcher {
    constructor() {
        this.currentLanguage = localStorage.getItem('starshop-language') || 'vi';
        this.translations = {};
        this.init();
    }

    init() {
        this.loadTranslations();
        this.updateLanguageDisplay();
        this.bindEvents();
        this.applyLanguage();
    }

    // Load translation data
    loadTranslations() {
        this.translations = {
            vi: {
                // Header
                'search-placeholder': 'üå∏ T√¨m hoa nhanh - Hoa sinh nh·∫≠t, t√¨nh y√™u, c∆∞·ªõi...',
                'login': 'ƒêƒÉng nh·∫≠p',
                'register': 'ƒêƒÉng k√Ω',
                'profile': 'Th√¥ng tin c√° nh√¢n',
                'orders': 'ƒê∆°n h√†ng c·ªßa t√¥i',
                'wishlist': 'Danh s√°ch y√™u th√≠ch',
                'settings': 'C√†i ƒë·∫∑t',
                'logout': 'ƒêƒÉng xu·∫•t',
                'customer-role': 'Kh√°ch h√†ng',
                
                // Navigation
                'home': 'Trang ch·ªß',
                'categories': 'Danh m·ª•c hoa',
                'products': 'S·∫£n ph·∫©m',
                'gifts': 'Qu√† t·∫∑ng',
                'occasions': 'D·ªãp ƒë·∫∑c bi·ªát',
                'blog': 'Blog',
                'contact': 'Li√™n h·ªá',
                
                // Categories
                'birthday-flowers': 'Hoa sinh nh·∫≠t',
                'love-flowers': 'Hoa t√¨nh y√™u',
                'wedding-flowers': 'Hoa c∆∞·ªõi',
                'opening-flowers': 'Hoa khai tr∆∞∆°ng',
                'sympathy-flowers': 'Hoa chia bu·ªìn',
                'mother-flowers': 'Hoa t·∫∑ng m·∫π',
                
                // Home page
                'hero-title': 'Mang Hoa ƒê·∫øn Ni·ªÅm Vui C·ªßa B·∫°n',
                'hero-subtitle': 'Kh√°m ph√° b·ªô s∆∞u t·∫≠p hoa t∆∞∆°i cao c·∫•p ƒë∆∞·ª£c tuy·ªÉn ch·ªçn k·ªπ l∆∞·ª°ng, mang ƒë·∫øn nh·ªØng kho·∫£nh kh·∫Øc ƒë·∫∑c bi·ªát nh·∫•t trong cu·ªôc s·ªëng',
                'explore-products': 'Kh√°m ph√° s·∫£n ph·∫©m',
                'view-catalog': 'Xem danh m·ª•c',
                
                // Why StarShop
                'why-starshop': 'T·∫°i sao ch·ªçn StarShop?',
                'fresh-flowers': 'Hoa t∆∞∆°i 100%',
                'fresh-desc': 'Cam k·∫øt hoa t∆∞∆°i nh·∫≠p kh·∫©u tr·ª±c ti·∫øp',
                'fast-delivery': 'Giao h√†ng nhanh',
                'fast-desc': 'Giao h√†ng trong 2 gi·ªù n·ªôi th√†nh HCM',
                'professional-design': 'Thi·∫øt k·∫ø chuy√™n nghi·ªáp',
                'design-desc': 'ƒê·ªôi ng≈© florist chuy√™n nghi·ªáp',
                'support-247': 'H·ªó tr·ª£ 24/7',
                'support-desc': 'T∆∞ v·∫•n v√† h·ªó tr·ª£ m·ªçi l√∫c',
                
                // Products
                'featured-products': 'S·∫£n ph·∫©m n·ªïi b·∫≠t',
                'quick-add': 'Th√™m nhanh',
                'adding': 'ƒêang th√™m...',
                'added': 'ƒê√£ th√™m',
                'add-to-cart-success': 'ƒê√£ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng!',
                
                // Footer
                'language': 'Ng√¥n ng·ªØ',
                'vietnamese': 'Ti·∫øng Vi·ªát',
                'english': 'English'
            },
            en: {
                // Header
                'search-placeholder': 'üå∏ Search flowers quickly - Birthday, love, wedding...',
                'login': 'Login',
                'register': 'Register',
                'profile': 'Profile',
                'orders': 'My Orders',
                'wishlist': 'Wishlist',
                'settings': 'Settings',
                'logout': 'Logout',
                'customer-role': 'Customer',
                
                // Navigation
                'home': 'Home',
                'categories': 'Categories',
                'products': 'Products',
                'gifts': 'Gifts',
                'occasions': 'Occasions',
                'blog': 'Blog',
                'contact': 'Contact',
                
                // Categories
                'birthday-flowers': 'Birthday Flowers',
                'love-flowers': 'Love Flowers',
                'wedding-flowers': 'Wedding Flowers',
                'opening-flowers': 'Opening Flowers',
                'sympathy-flowers': 'Sympathy Flowers',
                'mother-flowers': 'Mother Flowers',
                
                // Home page
                'hero-title': 'Bringing Flowers to Your Joy',
                'hero-subtitle': 'Discover our premium collection of fresh flowers carefully curated to bring the most special moments in life',
                'explore-products': 'Explore Products',
                'view-catalog': 'View Catalog',
                
                // Why StarShop
                'why-starshop': 'Why Choose StarShop?',
                'fresh-flowers': '100% Fresh Flowers',
                'fresh-desc': 'Direct import fresh flowers guarantee',
                'fast-delivery': 'Fast Delivery',
                'fast-desc': '2-hour delivery in Ho Chi Minh City',
                'professional-design': 'Professional Design',
                'design-desc': 'Professional florist team',
                'support-247': '24/7 Support',
                'support-desc': 'Consultation and support anytime',
                
                // Products
                'featured-products': 'Featured Products',
                'quick-add': 'Quick Add',
                'adding': 'Adding...',
                'added': 'Added',
                'add-to-cart-success': 'Product added to cart!',
                
                // Footer
                'language': 'Language',
                'vietnamese': 'Vietnamese',
                'english': 'English'
            }
        };
    }

    // Update language display in switcher
    updateLanguageDisplay() {
        const languageTexts = document.querySelectorAll('.language-text');
        const currentFlag = this.currentLanguage === 'vi' ? 
            'https://flagcdn.com/w20/vn.png' : 
            'https://flagcdn.com/w20/us.png';
        
        languageTexts.forEach(text => {
            text.textContent = this.currentLanguage.toUpperCase();
        });

        // Update active state
        document.querySelectorAll('.language-option').forEach(option => {
            option.classList.remove('active');
            if (option.dataset.lang === this.currentLanguage) {
                option.classList.add('active');
            }
        });

        document.querySelectorAll('.mobile-language-option').forEach(option => {
            option.classList.remove('active');
            if (option.dataset.lang === this.currentLanguage) {
                option.classList.add('active');
            }
        });
    }

    // Bind click events
    bindEvents() {
        // Desktop language options
        document.querySelectorAll('.language-option').forEach(option => {
            option.addEventListener('click', (e) => {
                e.preventDefault();
                this.switchLanguage(option.dataset.lang);
            });
        });

        // Mobile language options
        document.querySelectorAll('.mobile-language-option').forEach(option => {
            option.addEventListener('click', (e) => {
                e.preventDefault();
                this.switchLanguage(option.dataset.lang);
            });
        });
    }

    // Switch language
    switchLanguage(language) {
        if (language === this.currentLanguage) return;
        
        this.currentLanguage = language;
        localStorage.setItem('starshop-language', language);
        
        this.updateLanguageDisplay();
        this.applyLanguage();
        
        // Show notification
        this.showLanguageChangeNotification();
    }

    // Apply language to page elements
    applyLanguage() {
        const translations = this.translations[this.currentLanguage];
        
        // Update elements with data-translate attribute
        document.querySelectorAll('[data-translate]').forEach(element => {
            const key = element.dataset.translate;
            if (translations[key]) {
                if (element.tagName === 'INPUT' && element.type === 'text') {
                    element.placeholder = translations[key];
                } else {
                    element.textContent = translations[key];
                }
            }
        });

        // Update specific elements by ID or class
        this.updateSpecificElements(translations);
    }

    // Update specific elements that need special handling
    updateSpecificElements(translations) {
        // Search input placeholder
        const searchInputs = document.querySelectorAll('.search-input-hero, .search-input');
        searchInputs.forEach(input => {
            input.placeholder = translations['search-placeholder'];
        });

        // User role text
        const userRoles = document.querySelectorAll('.user-role');
        userRoles.forEach(role => {
            role.textContent = translations['customer-role'];
        });

        // Update page title
        if (document.title.includes('StarShop')) {
            document.title = this.currentLanguage === 'vi' ? 
                'StarShop - C·ª≠a h√†ng hoa t∆∞∆°i' : 
                'StarShop - Fresh Flower Shop';
        }
    }

    // Show language change notification
    showLanguageChangeNotification() {
        const message = this.currentLanguage === 'vi' ? 
            'ƒê√£ chuy·ªÉn sang Ti·∫øng Vi·ªát' : 
            'Switched to English';
        
        // Use existing toast function if available
        if (typeof showToast === 'function') {
            showToast(message, 'success');
        } else {
            // Fallback notification
            const notification = document.createElement('div');
            notification.className = 'language-notification';
            notification.textContent = message;
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: var(--primary);
                color: white;
                padding: 12px 20px;
                border-radius: 8px;
                z-index: 9999;
                font-size: 14px;
                font-weight: 500;
                box-shadow: 0 4px 12px rgba(0,0,0,0.15);
                transform: translateX(100%);
                transition: transform 0.3s ease;
            `;
            
            document.body.appendChild(notification);
            
            // Animate in
            setTimeout(() => {
                notification.style.transform = 'translateX(0)';
            }, 100);
            
            // Remove after 3 seconds
            setTimeout(() => {
                notification.style.transform = 'translateX(100%)';
                setTimeout(() => {
                    document.body.removeChild(notification);
                }, 300);
            }, 3000);
        }
    }

    // Get current language
    getCurrentLanguage() {
        return this.currentLanguage;
    }

    // Get translation for a key
    translate(key) {
        return this.translations[this.currentLanguage][key] || key;
    }
}

// Initialize language switcher when DOM is ready
document.addEventListener('DOMContentLoaded', function() {
    window.languageSwitcher = new LanguageSwitcher();
});

// Export for use in other scripts
if (typeof module !== 'undefined' && module.exports) {
    module.exports = LanguageSwitcher;
}
